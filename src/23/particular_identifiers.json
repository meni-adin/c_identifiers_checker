{
    "description": "The identifier matches a pattern that have particular semantics, according to section Â§J.6.1.",
    "list_type": "plain",
    "list": [
        "abort_handler_s",
        "abort",
        "abs",
        "acosd128",
        "acosd32",
        "acosd64",
        "acosd",
        "acosf",
        "acoshd128",
        "acoshd32",
        "acoshd64",
        "acoshd",
        "acoshf",
        "acoshl",
        "acosh",
        "acosl",
        "acospid128",
        "acospid32",
        "acospid64",
        "acospid",
        "acospif",
        "acospil",
        "acospi",
        "acos",
        "addd",
        "addf",
        "alignas",
        "aligned_alloc",
        "alignof",
        "and_eq",
        "and",
        "asctime_s",
        "asctime",
        "asind128",
        "asind32",
        "asind64",
        "asind",
        "asinf",
        "asinhd128",
        "asinhd32",
        "asinhd64",
        "asinhd",
        "asinhf",
        "asinhl",
        "asinh",
        "asinl",
        "asinpid128",
        "asinpid32",
        "asinpid64",
        "asinpid",
        "asinpif",
        "asinpil",
        "asinpi",
        "asin",
        "assert",
        "atan2d128",
        "atan2d32",
        "atan2d64",
        "atan2d",
        "atan2f",
        "atan2l",
        "atan2pid128",
        "atan2pid32",
        "atan2pid64",
        "atan2pid",
        "atan2pif",
        "atan2pil",
        "atan2pi",
        "atan2",
        "atand128",
        "atand32",
        "atand64",
        "atand",
        "atanf",
        "atanhd128",
        "atanhd32",
        "atanhd64",
        "atanhd",
        "atanhf",
        "atanhl",
        "atanh",
        "atanl",
        "atanpid128",
        "atanpid32",
        "atanpid64",
        "atanpid",
        "atanpif",
        "atanpil",
        "atanpi",
        "atan",
        "atexit",
        "atof",
        "atoi",
        "atoll",
        "atol",
        "at_quick_exit",
        "auto",
        "bitand",
        "BITINT_MAXWIDTH",
        "bitor",
        "BOOL_WIDTH",
        "bool",
        "break",
        "bsearch_s",
        "bsearch",
        "btowc",
        "BUFSIZ",
        "c16rtomb",
        "c32rtomb",
        "c8rtomb",
        "cabsf",
        "cabsl",
        "cabs",
        "cacosf",
        "cacoshf",
        "cacoshl",
        "cacosh",
        "cacosl",
        "cacospi",
        "cacos",
        "calloc",
        "call_once",
        "canonicalized128",
        "canonicalized32",
        "canonicalized64",
        "canonicalized",
        "canonicalizef",
        "canonicalizel",
        "canonicalize",
        "cargf",
        "cargl",
        "carg",
        "case",
        "casinf",
        "casinhf",
        "casinhl",
        "casinh",
        "casinl",
        "casinpi",
        "casin",
        "catanf",
        "catanhf",
        "catanhl",
        "catanh",
        "catanl",
        "catanpi",
        "catan",
        "cbrtd128",
        "cbrtd32",
        "cbrtd64",
        "cbrtd",
        "cbrtf",
        "cbrtl",
        "cbrt",
        "ccompoundn",
        "ccosf",
        "ccoshf",
        "ccoshl",
        "ccosh",
        "ccosl",
        "ccospi",
        "ccos",
        "ceild128",
        "ceild32",
        "ceild64",
        "ceild",
        "ceilf",
        "ceill",
        "ceil",
        "cerfc",
        "cerf",
        "cexp10m1",
        "cexp10",
        "cexp2m1",
        "cexp2",
        "cexpf",
        "cexpl",
        "cexpm1",
        "cexp",
        "char16_t",
        "char32_t",
        "char8_t",
        "CHAR_BIT",
        "CHAR_WIDTH",
        "char",
        "cimagf",
        "cimagl",
        "cimag",
        "clearerr",
        "clgamma",
        "CLOCKS_PER_SEC",
        "clock_t",
        "clock",
        "clog10p1",
        "clog10",
        "clog1p",
        "clog2p1",
        "clog2",
        "clogf",
        "clogl",
        "clogp1",
        "clog",
        "CMPLXF",
        "CMPLXL",
        "CMPLX",
        "complex",
        "compl",
        "compoundnd128",
        "compoundnd32",
        "compoundnd64",
        "compoundnd",
        "compoundnf",
        "compoundnl",
        "compoundn",
        "conjf",
        "conjl",
        "conj",
        "constexpr",
        "constraint_handler_t",
        "const",
        "continue",
        "copysignd128",
        "copysignd32",
        "copysignd64",
        "copysignd",
        "copysignf",
        "copysignl",
        "copysign",
        "cosd128",
        "cosd32",
        "cosd64",
        "cosd",
        "cosf",
        "coshd128",
        "coshd32",
        "coshd64",
        "coshd",
        "coshf",
        "coshl",
        "cosh",
        "cosl",
        "cospid128",
        "cospid32",
        "cospid64",
        "cospid",
        "cospif",
        "cospil",
        "cospi",
        "cos",
        "cpowf",
        "cpowl",
        "cpown",
        "cpowr",
        "cpow",
        "cprojf",
        "cprojl",
        "cproj",
        "crealf",
        "creall",
        "creal",
        "crootn",
        "crsqrt",
        "csinf",
        "csinhf",
        "csinhl",
        "csinh",
        "csinl",
        "csinpi",
        "csin",
        "csqrtf",
        "csqrtl",
        "csqrt",
        "ctanf",
        "ctanhf",
        "ctanhl",
        "ctanh",
        "ctanl",
        "ctanpi",
        "ctan",
        "ctgamma",
        "ctime_s",
        "ctime",
        "currency_symbol",
        "CX_LIMITED_RANGE",
        "d32addd128",
        "d32addd64",
        "d32add",
        "d32divd128",
        "d32divd64",
        "d32div",
        "d32fmad128",
        "d32fmad64",
        "d32fma",
        "d32muld128",
        "d32muld64",
        "d32mul",
        "d32sqrtd128",
        "d32sqrtd64",
        "d32sqrt",
        "d32subd128",
        "d32subd64",
        "d32sub",
        "d64addd128",
        "d64add",
        "d64divd128",
        "d64div",
        "d64fmad128",
        "d64fma",
        "d64muld128",
        "d64mul",
        "d64sqrtd128",
        "d64sqrt",
        "d64subd128",
        "d64sub",
        "daddl",
        "dadd",
        "ddivl",
        "ddiv",
        "decimal_point",
        "Decimal",
        "DECN_",
        "DECN",
        "decodebind128",
        "decodebind32",
        "decodebind64",
        "decodebind",
        "decodebin",
        "decodedecd128",
        "decodedecd32",
        "decodedecd64",
        "decodedecd",
        "decodedec",
        "decodef",
        "DEC",
        "DEFAULT",
        "defined",
        "define",
        "deprecated",
        "dfmal",
        "dfma",
        "difftime",
        "divd",
        "divf",
        "div_t",
        "div",
        "dmull",
        "dmul",
        "double_t",
        "double",
        "do",
        "dsqrtl",
        "dsqrt",
        "dsubl",
        "dsub",
        "elifdef",
        "elifndef",
        "elif",
        "else",
        "embed",
        "encbind",
        "encdecd",
        "encf",
        "encodebind128",
        "encodebind32",
        "encodebind64",
        "encodebind",
        "encodebin",
        "encodedecd128",
        "encodedecd32",
        "encodedecd64",
        "encodedecd",
        "encodedec",
        "encodef",
        "endif",
        "enum",
        "erfcd128",
        "erfcd32",
        "erfcd64",
        "erfcd",
        "erfcf",
        "erfcl",
        "erfc",
        "erfd128",
        "erfd32",
        "erfd64",
        "erfd",
        "erff",
        "erfl",
        "erf",
        "errno_t",
        "errno",
        "error",
        "exit",
        "exp10d128",
        "exp10d32",
        "exp10d64",
        "exp10d",
        "exp10f",
        "exp10l",
        "exp10m1d128",
        "exp10m1d32",
        "exp10m1d64",
        "exp10m1d",
        "exp10m1f",
        "exp10m1l",
        "exp10m1",
        "exp10",
        "exp2d128",
        "exp2d32",
        "exp2d64",
        "exp2d",
        "exp2f",
        "exp2l",
        "exp2m1d128",
        "exp2m1d32",
        "exp2m1d64",
        "exp2m1d",
        "exp2m1f",
        "exp2m1l",
        "exp2m1",
        "exp2",
        "expd128",
        "expd32",
        "expd64",
        "expd",
        "expf",
        "expl",
        "expm1d128",
        "expm1d32",
        "expm1d64",
        "expm1d",
        "expm1f",
        "expm1l",
        "expm1",
        "exp",
        "extern",
        "fabsd128",
        "fabsd32",
        "fabsd64",
        "fabsd",
        "fabsf",
        "fabsl",
        "fabs",
        "faddl",
        "fadd",
        "fallthrough",
        "false",
        "fclose",
        "fdimd128",
        "fdimd32",
        "fdimd64",
        "fdimd",
        "fdimf",
        "fdiml",
        "fdim",
        "fdivl",
        "fdiv",
        "feclearexcept",
        "fegetenv",
        "fegetexceptflag",
        "fegetmode",
        "fegetround",
        "feholdexcept",
        "femode_t",
        "FENV_ACCESS",
        "FENV_DEC_ROUND",
        "FENV_ROUND",
        "fenv_t",
        "feof",
        "feraiseexcept",
        "ferror",
        "fesetenv",
        "fesetexceptflag",
        "fesetexcept",
        "fesetmode",
        "fesetround",
        "fetestexceptflag",
        "fetestexcept",
        "feupdateenv",
        "fexcept_t",
        "fe_dec_getround",
        "fe_dec_setround",
        "fflush",
        "ffmal",
        "ffma",
        "fgetc",
        "fgetpos",
        "fgets",
        "fgetwc",
        "fgetws",
        "FILE",
        "float_t",
        "Float",
        "floord128",
        "floord32",
        "floord64",
        "floord",
        "floorf",
        "floorl",
        "floor",
        "FLTN_",
        "FLTN",
        "FLT",
        "fmad128",
        "fmad32",
        "fmad64",
        "fmad",
        "fmaf",
        "fmal",
        "fmaxd128",
        "fmaxd32",
        "fmaxd64",
        "fmaxd",
        "fmaxf",
        "fmaximumd128",
        "fmaximumd32",
        "fmaximumd64",
        "fmaximumd",
        "fmaximumf",
        "fmaximuml",
        "fmaximum_magd128",
        "fmaximum_magd32",
        "fmaximum_magd64",
        "fmaximum_magd",
        "fmaximum_magf",
        "fmaximum_magl",
        "fmaximum_mag_numd128",
        "fmaximum_mag_numd32",
        "fmaximum_mag_numd64",
        "fmaximum_mag_numd",
        "fmaximum_mag_numf",
        "fmaximum_mag_numl",
        "fmaximum_mag_num",
        "fmaximum_mag",
        "fmaximum_numd128",
        "fmaximum_numd32",
        "fmaximum_numd64",
        "fmaximum_numd",
        "fmaximum_numf",
        "fmaximum_numl",
        "fmaximum_num",
        "fmaximum",
        "fmaxl",
        "fmax",
        "fma",
        "fmind128",
        "fmind32",
        "fmind64",
        "fmind",
        "fminf",
        "fminimumd128",
        "fminimumd32",
        "fminimumd64",
        "fminimumd",
        "fminimumf",
        "fminimuml",
        "fminimum_magd128",
        "fminimum_magd32",
        "fminimum_magd64",
        "fminimum_magd",
        "fminimum_magf",
        "fminimum_magl",
        "fminimum_mag_numd128",
        "fminimum_mag_numd32",
        "fminimum_mag_numd64",
        "fminimum_mag_numd",
        "fminimum_mag_numf",
        "fminimum_mag_numl",
        "fminimum_mag_num",
        "fminimum_mag",
        "fminimum_numd128",
        "fminimum_numd32",
        "fminimum_numd64",
        "fminimum_numd",
        "fminimum_numf",
        "fminimum_numl",
        "fminimum_num",
        "fminimum",
        "fminl",
        "fmin",
        "fmodd128",
        "fmodd32",
        "fmodd64",
        "fmodd",
        "fmodf",
        "fmodl",
        "fmod",
        "fmull",
        "fmul",
        "fopen_s",
        "fopen",
        "for",
        "fpclassify",
        "fpos_t",
        "fprintf_s",
        "fprintf",
        "fputc",
        "fputs",
        "fputwc",
        "fputws",
        "frac_digits",
        "fread",
        "free_aligned_sized",
        "free_sized",
        "free",
        "freopen_s",
        "freopen",
        "frexpd128",
        "frexpd32",
        "frexpd64",
        "frexpd",
        "frexpf",
        "frexpl",
        "frexp",
        "fromfpd128",
        "fromfpd32",
        "fromfpd64",
        "fromfpd",
        "fromfpf",
        "fromfpl",
        "fromfpxd128",
        "fromfpxd32",
        "fromfpxd64",
        "fromfpxd",
        "fromfpxf",
        "fromfpxl",
        "fromfpx",
        "fromfp",
        "frompfpd",
        "frompfpf",
        "frompfpl",
        "frompfpxd",
        "frompfpxf",
        "frompfpxl",
        "frompfpx",
        "frompfp",
        "fscanf_s",
        "fscanf",
        "fseek",
        "fsetpos",
        "fsqrtl",
        "fsqrt",
        "fsubl",
        "fsub",
        "ftell",
        "fwide",
        "fwprintf_s",
        "fwprintf",
        "fwrite",
        "fwscanf_s",
        "fwscanf",
        "generic_count_type",
        "generic_return_type",
        "generic_value_type",
        "getchar",
        "getc",
        "getenv_s",
        "getenv",
        "getpayloadd128",
        "getpayloadd32",
        "getpayloadd64",
        "getpayloadd",
        "getpayloadf",
        "getpayloadl",
        "getpayload",
        "gets_s",
        "gets",
        "getwchar",
        "getwc",
        "gmtime_r",
        "gmtime_s",
        "gmtime",
        "goto",
        "grouping",
        "HUGE_VALF",
        "HUGE_VALL",
        "HUGE_VAL_D128",
        "HUGE_VAL_D32",
        "HUGE_VAL_D64",
        "HUGE_VAL_D",
        "HUGE_VAL_F",
        "HUGE_VAL",
        "hypotd128",
        "hypotd32",
        "hypotd64",
        "hypotd",
        "hypotf",
        "hypotl",
        "hypot",
        "ifdef",
        "ifndef",
        "if_empty",
        "if",
        "ignore_handler_s",
        "ilogbd128",
        "ilogbd32",
        "ilogbd64",
        "ilogbd",
        "ilogbf",
        "ilogbl",
        "ilogb",
        "imaginary",
        "imaxabs",
        "imaxdiv_t",
        "imaxdiv",
        "include",
        "INFINITY",
        "inline",
        "int_curr_symbol",
        "int_frac_digits",
        "int_n_cs_precedes",
        "int_n_sep_by_space",
        "int_n_sign_posn",
        "int_p_cs_precedes",
        "int_p_sep_by_space",
        "int_p_sign_posn",
        "I",
        "jmp_buf",
        "kill_dependency",
        "labs",
        "lconv",
        "ldexpd128",
        "ldexpd32",
        "ldexpd64",
        "ldexpd",
        "ldexpf",
        "ldexpl",
        "ldexp",
        "ldiv_t",
        "ldiv",
        "lgammad128",
        "lgammad32",
        "lgammad64",
        "lgammad",
        "lgammaf",
        "lgammal",
        "lgamma",
        "limit",
        "line",
        "llabs",
        "lldiv_t",
        "lldiv",
        "llogbd128",
        "llogbd32",
        "llogbd64",
        "llogbd",
        "llogbf",
        "llogbl",
        "llogb",
        "LLONG_WIDTH",
        "llquantexpd128",
        "llquantexpd32",
        "llquantexpd64",
        "llquantexpd",
        "llquantexp",
        "llrintd128",
        "llrintd32",
        "llrintd64",
        "llrintd",
        "llrintf",
        "llrintl",
        "llrint",
        "llroundd128",
        "llroundd32",
        "llroundd64",
        "llroundd",
        "llroundf",
        "llroundl",
        "llround",
        "localeconv",
        "localtime_r",
        "localtime_s",
        "localtime",
        "log10d128",
        "log10d32",
        "log10d64",
        "log10d",
        "log10f",
        "log10l",
        "log10p1d128",
        "log10p1d32",
        "log10p1d64",
        "log10p1d",
        "log10p1f",
        "log10p1l",
        "log10p1",
        "log10",
        "log1pd128",
        "log1pd32",
        "log1pd64",
        "log1pd",
        "log1pf",
        "log1pl",
        "log1p",
        "log2d128",
        "log2d32",
        "log2d64",
        "log2d",
        "log2f",
        "log2l",
        "log2p1d128",
        "log2p1d32",
        "log2p1d64",
        "log2p1d",
        "log2p1f",
        "log2p1l",
        "log2p1",
        "log2",
        "logbd128",
        "logbd32",
        "logbd64",
        "logbd",
        "logbf",
        "logbl",
        "logb",
        "logd128",
        "logd32",
        "logd64",
        "logd",
        "logf",
        "logl",
        "logp1d128",
        "logp1d32",
        "logp1d64",
        "logp1d",
        "logp1f",
        "logp1l",
        "logp1",
        "log",
        "longjmp",
        "long_double_t",
        "LONG_WIDTH",
        "long",
        "lrintd128",
        "lrintd32",
        "lrintd64",
        "lrintd",
        "lrintf",
        "lrintl",
        "lrint",
        "lroundd128",
        "lroundd32",
        "lroundd64",
        "lroundd",
        "lroundf",
        "lroundl",
        "lround",
        "L_tmpnam_s",
        "L_tmpnam",
        "main",
        "malloc",
        "math_errhandling",
        "max_align_t",
        "maybe_unused",
        "mblen",
        "mbrlen",
        "mbrtoc16",
        "mbrtoc32",
        "mbrtoc8",
        "mbrtowc",
        "mbsinit",
        "mbsrtowcs_s",
        "mbsrtowcs",
        "mbstate_t",
        "mbstowcs_s",
        "mbstowcs",
        "mbtowc",
        "mktime",
        "modfd128",
        "modfd32",
        "modfd64",
        "modfd",
        "modff",
        "modfl",
        "modf",
        "mon_decimal_point",
        "mon_grouping",
        "mon_thousands_sep",
        "muld",
        "mulf",
        "nand128",
        "nand32",
        "nand64",
        "nand",
        "nanf",
        "nanl",
        "nan",
        "NDEBUG",
        "nearbyintd128",
        "nearbyintd32",
        "nearbyintd64",
        "nearbyintd",
        "nearbyintf",
        "nearbyintl",
        "nearbyint",
        "negative_sign",
        "nextafterd128",
        "nextafterd32",
        "nextafterd64",
        "nextafterd",
        "nextafterf",
        "nextafterl",
        "nextafter",
        "nextdownd128",
        "nextdownd32",
        "nextdownd64",
        "nextdownd",
        "nextdownf",
        "nextdownl",
        "nextdown",
        "nexttowardd128",
        "nexttowardd32",
        "nexttowardd64",
        "nexttowardf",
        "nexttowardl",
        "nexttoward",
        "nextupd128",
        "nextupd32",
        "nextupd64",
        "nextupd",
        "nextupf",
        "nextupl",
        "nextup",
        "nodiscard",
        "noreturn",
        "not_eq",
        "not",
        "nullptr_t",
        "nullptr",
        "NULL",
        "n_cs_precedes",
        "n_sep_by_space",
        "n_sign_posn",
        "offsetof",
        "OFF",
        "ONCE_FLAG_INIT",
        "once_flag",
        "ON",
        "or_eq",
        "or",
        "perror",
        "positive_sign",
        "powd128",
        "powd32",
        "powd64",
        "powd",
        "powf",
        "powl",
        "pownd128",
        "pownd32",
        "pownd64",
        "pownd",
        "pownf",
        "pownl",
        "pown",
        "powrd128",
        "powrd32",
        "powrd64",
        "powrd",
        "powrf",
        "powrl",
        "powr",
        "pow",
        "pp_param",
        "pragma",
        "prefix",
        "printf_s",
        "printf",
        "ptrdiff_t",
        "PTRDIFF_WIDTH",
        "putchar",
        "putc",
        "puts",
        "putwchar",
        "putwc",
        "p_cs_precedes",
        "p_sep_by_space",
        "p_sign_posn",
        "QChar",
        "qsort_s",
        "qsort",
        "quantized128",
        "quantized32",
        "quantized64",
        "quantized",
        "quantize",
        "quantumd128",
        "quantumd32",
        "quantumd64",
        "quantumd",
        "quantum",
        "quick_exit",
        "QVoid",
        "QWchar_t",
        "raise",
        "rand",
        "realloc",
        "register",
        "remainderd128",
        "remainderd32",
        "remainderd64",
        "remainderd",
        "remainderf",
        "remainderl",
        "remainder",
        "remove",
        "remquof",
        "remquol",
        "remquo",
        "rename",
        "reproducible",
        "restrict",
        "return",
        "rewind",
        "rintd128",
        "rintd32",
        "rintd64",
        "rintd",
        "rintf",
        "rintl",
        "rint",
        "rootnd128",
        "rootnd32",
        "rootnd64",
        "rootnd",
        "rootnf",
        "rootnl",
        "rootn",
        "roundd128",
        "roundd32",
        "roundd64",
        "roundd",
        "roundevend128",
        "roundevend32",
        "roundevend64",
        "roundevend",
        "roundevenf",
        "roundevenl",
        "roundeven",
        "roundf",
        "roundl",
        "round",
        "rsize_t",
        "rsqrtd128",
        "rsqrtd32",
        "rsqrtd64",
        "rsqrtd",
        "rsqrtf",
        "rsqrtl",
        "rsqrt",
        "samequantumd128",
        "samequantumd32",
        "samequantumd64",
        "samequantumd",
        "samequantum",
        "scalblnd128",
        "scalblnd32",
        "scalblnd64",
        "scalblnd",
        "scalblnf",
        "scalblnl",
        "scalbln",
        "scalbnd128",
        "scalbnd32",
        "scalbnd64",
        "scalbnd",
        "scalbnf",
        "scalbnl",
        "scalbn",
        "scanf_s",
        "scanf",
        "SCHAR_WIDTH",
        "SEEK_CUR",
        "SEEK_END",
        "SEEK_SET",
        "setbuf",
        "setjmp",
        "setlocale",
        "setpayloadd128",
        "setpayloadd32",
        "setpayloadd64",
        "setpayloadd",
        "setpayloadf",
        "setpayloadl",
        "setpayloadsigd128",
        "setpayloadsigd32",
        "setpayloadsigd64",
        "setpayloadsigd",
        "setpayloadsigf",
        "setpayloadsigl",
        "setpayloadsig",
        "setpayload",
        "setvbuf",
        "set_constraint_handler_s",
        "short",
        "SHRT_WIDTH",
        "signal",
        "signbit",
        "signed",
        "sig_atomic_t",
        "sind128",
        "sind32",
        "sind64",
        "sind",
        "sinf",
        "sinhd128",
        "sinhd32",
        "sinhd64",
        "sinhd",
        "sinhf",
        "sinhl",
        "sinh",
        "sinl",
        "sinpid128",
        "sinpid32",
        "sinpid64",
        "sinpid",
        "sinpif",
        "sinpil",
        "sinpi",
        "sin",
        "sizeof",
        "size_t",
        "SIZE_WIDTH",
        "snprintf_s",
        "snprintf",
        "snwprintf_s",
        "sprintf_s",
        "sprintf",
        "sqrtd128",
        "sqrtd32",
        "sqrtd64",
        "sqrtd",
        "sqrtf",
        "sqrtl",
        "sqrt",
        "srand",
        "sscanf_s",
        "sscanf",
        "static_assert",
        "static",
        "STDC",
        "stderr",
        "stdin",
        "stdout",
        "subd",
        "subf",
        "suffix",
        "switch",
        "swprintf_s",
        "swprintf",
        "swscanf_s",
        "swscanf",
        "system",
        "tand128",
        "tand32",
        "tand64",
        "tand",
        "tanf",
        "tanhd128",
        "tanhd32",
        "tanhd64",
        "tanhd",
        "tanhf",
        "tanhl",
        "tanh",
        "tanl",
        "tanpid128",
        "tanpid32",
        "tanpid64",
        "tanpid",
        "tanpif",
        "tanpil",
        "tanpi",
        "tan",
        "tgammad128",
        "tgammad32",
        "tgammad64",
        "tgammad",
        "tgammaf",
        "tgammal",
        "tgamma",
        "thousands_sep",
        "thread_local",
        "timegm",
        "timespec_getres",
        "timespec_get",
        "timespec",
        "time_t",
        "time",
        "tmpfile_s",
        "tmpfile",
        "tmpnam_s",
        "tmpnam",
        "TMP_MAX_S",
        "tm_hour",
        "tm_isdst",
        "tm_mday",
        "tm_min",
        "tm_mon",
        "tm_sec",
        "tm_wday",
        "tm_yday",
        "tm_year",
        "tm",
        "true",
        "truncd128",
        "truncd32",
        "truncd64",
        "truncd",
        "truncf",
        "truncl",
        "trunc",
        "TSS_DTOR_ITERATIONS",
        "tv_nsec",
        "tv_sec",
        "typedef",
        "typeof_unqual",
        "typeof",
        "UCHAR_WIDTH",
        "ufromfpd128",
        "ufromfpd32",
        "ufromfpd64",
        "ufromfpd",
        "ufromfpf",
        "ufromfpl",
        "ufromfpxd128",
        "ufromfpxd32",
        "ufromfpxd64",
        "ufromfpxd",
        "ufromfpxf",
        "ufromfpxl",
        "ufromfpx",
        "ufromfp",
        "ULLONG_WIDTH",
        "ULONG_WIDTH",
        "undef",
        "ungetc",
        "ungetwc",
        "union",
        "unreachable",
        "unsequenced",
        "unsigned",
        "USHRT_WIDTH",
        "va_arg",
        "va_copy",
        "va_end",
        "va_list",
        "va_start",
        "vfprintf_s",
        "vfprintf",
        "vfscanf_s",
        "vfscanf",
        "vfwprintf_s",
        "vfwprintf",
        "vfwscanf_s",
        "vfwscanf",
        "void",
        "volatile",
        "vprintf_s",
        "vprintf",
        "vscanf_s",
        "vscanf",
        "vsnprintf_s",
        "vsnprintf",
        "vsnwprintf_s",
        "vsprintf_s",
        "vsprintf",
        "vsscanf_s",
        "vsscanf",
        "vswprintf_s",
        "vswprintf",
        "vswscanf_s",
        "vswscanf",
        "vwprintf_s",
        "vwprintf",
        "vwscanf_s",
        "vwscanf",
        "warning",
        "wchar_t",
        "WCHAR_WIDTH",
        "wcrtomb_s",
        "wcrtomb",
        "wctob",
        "wctomb_s",
        "wctomb",
        "wctrans_t",
        "wctrans",
        "wctype_t",
        "wctype",
        "WEOF",
        "while",
        "wint_t",
        "WINT_WIDTH",
        "wmemchr",
        "wmemcmp",
        "wmemcpy_s",
        "wmemcpy",
        "wmemmove_s",
        "wmemmove",
        "wmemset",
        "wprintf_s",
        "wprintf",
        "wscanf_s",
        "wscanf",
        "xaddd",
        "xaddf",
        "xdivd",
        "xdivf",
        "xfmad",
        "xfmaf",
        "xmuld",
        "xmulf",
        "xor_eq",
        "xor",
        "xsqrtd",
        "xsqrtf",
        "xsubd",
        "xsubf",
        "X_"
    ]
}
